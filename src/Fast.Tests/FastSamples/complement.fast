//Language complement
Alphabet BTree[]{Zero(0), One(1), Two(2)}

Public Lang q1 : BTree {
     Zero() 
   | Two(x,y) given (q1 x) (q1 y)
} 
//The language of all trees
Public Lang tot : BTree {
     Zero() 
   | One(x) 
   | Two(x,y) 
}  
Def c_q1 : BTree := (complement q1)
Print c_q1
Def c_c_q1 : BTree := (complement c_q1)
Def all : BTree := (union c_q1 q1)
//the union of q1 and its complement is the same as the language of all trees
AssertTrue (eq_lang all tot)
